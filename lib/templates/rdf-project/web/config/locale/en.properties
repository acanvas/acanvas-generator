##############################
### Screen: FACEBOOK_EXAMPLE
##############################
screen.facebook_example.url = /facebook-example
screen.facebook_example.title = Facebook API
screen.facebook_example.headline = Facebook API
screen.facebook_example.copy = Acanvas comes with Plugins for API connectivity to Google and Facebook. Request App permissions, download friend lists and photos. You can even upload! Try out the examples below. Make sure to start with the topmost Button.\nTODO: FB login sometimes buggy on mobile.
screen.facebook_example.col01 = Facebook API
screen.facebook_example.button01 = Show my Facebook Albums
screen.facebook_example.invite.button = Invite some Friends
screen.facebook_example.invite.dialog.title = Time to invite some friends!
screen.facebook_example.invite.dialog.copy = Yes. This app is awesome. We know it. You know it. Now get some friends to join the club.
screen.facebook_example.invite.payload = Secret Tracking Data from the Test App.
screen.facebook_example.share.button = Share on Wall
screen.facebook_example.share.message = A custom message by the user
screen.facebook_example.share.link = http://acanvas.sounddesignz.com/template/
screen.facebook_example.share.image = http://acanvas.sounddesignz.com/template/assets/dog.jpg
screen.facebook_example.upload.button = Upload a photo of a dog
screen.facebook_example.upload.filename = Upload a photo
screen.facebook_example.upload.message = Automatic Updog by acanvas framework for Dart. https://github.com/blockforest/acanvas-generator

##############################
### Screen: FACEBOOK_ALBUMS
##############################
screen.facebook_albums.url = /facebook-albums
screen.facebook_albums.title = Facebook Albums
screen.facebook_albums.headline = Lists
screen.facebook_albums.copy = Lists present multiple line items in a vertical arrangement as a single continuous element.

##############################
### Screen: FACEBOOK_PHOTOS
##############################
screen.facebook_photos.url = /facebook-photos
screen.facebook_photos.title = Facebook Photos
screen.facebook_photos.headline = Hello World.
screen.facebook_photos.copy = Freestyle lists are an alternative to standard list views. Freestyle lists come in handy for visual presentations.
screen.facebook_photos.pager.next = >
screen.facebook_photos.pager.prev = <
screen.facebook_photos.pager.empty = No entries found.
##############################
### Facebook Messages
##############################
message.facebook.loading.data = Getting data from facebook
message.facebook.sending.image = Uploading your image to facebook
message.facebook.login.waiting = Waiting for you to complete the dialog.
message.facebook.invite.waiting = Waiting for you to complete the dialog.
message.facebook.share.waiting = Waiting for you to complete the dialog.



##############################
### Screen: GOOGLE_EXAMPLE
##############################
screen.google_example.url = /google-example
screen.google_example.title = Google API
screen.google_example.headline = Google API Example
screen.google_example.copy = Acanvas comes with Plugins for API connectivity to Google and Facebook. Request App permissions, download friend lists and photos. you can even upload! Try out the examples below. Make sure to start with the topmost Button.
screen.google_example.col01 = Google Plus API
screen.google_example.col02 = Google Speech API

##############################
### Screen: GOOGLE_FRIENDS
##############################
screen.google_friends.url = /google-friends
screen.google_friends.title = Google Friends
screen.google_friends.headline = Grid Lists
screen.google_friends.copy = Grid lists are an alternative to standard list views. Grid lists are distinct from grids used for layouts and other visual presentations.
screen.google_friends.pager.next = >
screen.google_friends.pager.prev = <
screen.google_friends.pager.empty = No entries found.
##############################
### UGC scopes
##############################
plugin.ugc.user.fb.scopes.email = user_email
plugin.ugc.user.fb.scopes.photos = user_photos

#see: https://developers.google.com/+/web/api/rest/oauth#authorization-scopes
plugin.ugc.user.google.scopes.profile = https://www.googleapis.com/auth/plus.login
plugin.ugc.user.google.scopes.email = email

##############################
### Screen: UGCHOME
##############################
screen.ugchome.url = /examples/ugc-home
screen.ugchome.title = User Generated Content
screen.ugchome.headline = Click the FORWARD button in the Top Bar to browse through examples.
screen.ugchome.copy = Acanvas Framework's optional backend provides for easy integration of uploading and other functionality for persisting user input. It can be used in sweepstakes, voting, leaderboards, and many more.
screen.ugchome.pager.next = >
screen.ugchome.pager.prev = <
screen.ugchome.pager.empty = No entries found.

##############################
### Layer: Upload
##############################
layer.upload.url = /examples/ugc-upload
layer.upload.headline = Upload your image
layer.upload.button = BROWSE IMAGES

##############################
### Layer: Register
##############################
layer.register.url = /examples/ugc-register
layer.register.headline = Damn Signup
layer.register.copy = This service operates under German data protection law, under which services like this cannot allow for anonymous uploads. On a positive note, this service will not use the data you provide for any other purpose than to associate the upload to a user name (shown publicly) and an email address (kept private).
layer.register.social.headline = Convenience Login
layer.register.normal.headline = Inconvenient Login
layer.register.username = Please give your full name
layer.register.username.required = We really need your name
layer.register.email = and your email address
layer.register.email.required = We really need your email address
layer.register.email.desc = We will send you a single email with a link you need visit in order to validate your upload.
layer.register.password = Choose a password
layer.register.password.required = We really need you to choose a password
layer.register.password.desc = You can use the combination of email and password to log in in order to remove your upload, and to cast or remove your vote ('like') or rating on uploads.
layer.register.button.finish = Send & Close

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##

##############################
### Screen: BABYLON
##############################
screen.example.babylon.url = /examples/babylon
screen.example.babylon.title = Babylon Interop
screen.example.babylon.button01 = BABYLON!

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##

##############################
### Screen: Flump Guy
##############################
screen.stagexl.flump.guy.url = /examples/flump/guy
screen.stagexl.flump.guy.title = Flump Runtime
screen.stagexl.flump.guy.headline = Flump Runtime
screen.stagexl.flump.guy.copy = .
screen.stagexl.flump.guy.headline1 = What
screen.stagexl.flump.guy.copy1 = Flump converts Flash keyframe animations into texture atlases and XML or JSON that can be easily integrated into any scene graph-based 2D game engine. Flump runtimes exist for a growing number of game engines, including Starling, Sparrow, and Flambe. Create your animations in Flash Pro / Animate CC.
screen.stagexl.flump.guy.headline2 = Why
screen.stagexl.flump.guy.copy2 = Flash CS is a powerful 2D animation tool that everyone knows how to use. But the Flash runtime's proprietary .swf format is not easily parsed, and its vector-based approach to drawing is not performant. Flump allows developers to use a Flash art pipeline without being tied to its runtime.
screen.stagexl.flump.guy.headline3 = Who
screen.stagexl.flump.guy.copy3 = Flump was created at Three Rings by Charlie Groves, Tim Conkling, and Bruno Garcia. Icon by Jon Demos and Ned Hugar.

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##

##############################
### Screen: Md Dialogs
##############################
screen.paper_dialogs.url = /paper-dialogs
screen.paper_dialogs.title = Md Dialogs
screen.paper_dialogs.col01 = Dialogs
screen.paper_dialogs.button01 = Show me a cat!
screen.paper_dialogs.button02 = Show me the law!
screen.paper_dialogs.button03 = Show me a pic!

##############################
### Layer: Md Dialogs
##############################
layer.paper_dialogs.url = /paper-layer
layer.paper_dialogs.title = Cats
layer.paper_dialogs.headline = Here you go.
layer.paper_dialogs.button.close = Close
layer.paper_dialogs.button.close.meow = Meow!

##############################
### Screen: Md Toggle Buttons
##############################
screen.paper_toggles.url = /paper-toggles
screen.paper_toggles.title = Md Toggles
screen.paper_toggles.headline = Md Toggles
screen.paper_toggles.copy = A toggle is like a checkbox in that it is a control element that permits the user to make a binary choice, i.e. a choice between one of two possible mutually exclusive options. But it includes an action. For example, the user may have to activate (on state) or deactivate (off state). It looks more like a switch and is used a lot in settings.
screen.paper_toggles.col01 = Enabled
screen.paper_toggles.col02 = Disabled
screen.paper_toggles.button01 = Turbo Boost
screen.paper_toggles.button02 = Volume to 11
screen.paper_toggles.button03 = Happy Switch
screen.paper_toggles.button04 = Pay Dart-Dollars
screen.paper_toggles.button05 = SETI

##############################
### Screen: Md Buttons
##############################
screen.shader_example.url = /shader-example
screen.shader_example.title = 3D & Shaders
screen.shader_example.headline = 3D & Shaders
screen.shader_example.copy = WebGL (Web Graphics Library) is a JavaScript API for rendering interactive 3D computer graphics and 2D graphics within any compatible web browser without the use of plug-ins. WebGL is integrated completely into all the web standards of the browser allowing GPU accelerated usage of physics and image processing and effects as part of the web page canvas. WebGL elements can be mixed with other HTML elements and composited with other parts of the page or page background.
screen.shader_example.button01 = Shader 1
screen.shader_example.button02 = Shader 2
screen.shader_example.button03 = Shader 3
screen.shader_example.button04 = Shader 4

##############################
### Screen: PAPER_APP_BAR_EXAMPLE
##############################
screen.paper_app_bar_example.url = /paper-app-bar-example
screen.paper_app_bar_example.title = Md App Bar
screen.paper_app_bar_example.headline = App Bar
screen.paper_app_bar_example.copy = Menus allow users to take an action by selecting from a list of choices revealed upon opening a temporary, new sheet of material.
screen.paper_app_bar_example.tab01 = Tab 01
screen.paper_app_bar_example.tab02 = Tab 02
screen.paper_app_bar_example.tab03 = Tab 03

##############################
### Screen: PAPER_FABS
##############################
screen.paper_fabs.url = /paper-fabs
screen.paper_fabs.title = Md Fabs
screen.paper_fabs.headline = Floating Action Button
screen.paper_fabs.copy = Floating action buttons are used for a promoted action. They are distinguished by a circled icon floating above the UI and have motion behaviors that include morphing, launching, and a transferring anchor point.
screen.paper_fabs.col01 = Enabled
screen.paper_fabs.col02 = Disabled
screen.paper_fabs.col03 = Colors

##############################
### Screen: PAPER_BUTTONS
##############################
screen.paper_buttons.url = /paper-buttons
screen.paper_buttons.title = Md Buttons
screen.paper_buttons.headline = Buttons
screen.paper_buttons.copy = A button clearly communicates what action will occur when the user touches it. It consists of text, an image, or both, designed in accordance with your app’s color theme.
screen.paper_buttons.col01 = Flat
screen.paper_buttons.col02 = Raised
screen.paper_buttons.col03 = Toggleable
screen.paper_buttons.col04 = Disabled
screen.paper_buttons.button01 = BUTTON
screen.paper_buttons.button02 = COLORFUL
screen.paper_buttons.button03 = RAISED
screen.paper_buttons.button04 = NOINK
screen.paper_buttons.button05 = OK
screen.paper_buttons.button06 = CANCEL

##############################
### Screen: PAPER_CHECKBOXES
##############################
screen.paper_checkboxes.url = /paper-checkboxes
screen.paper_checkboxes.title = Md Checkboxes
screen.paper_checkboxes.headline = Checkboxes
screen.paper_checkboxes.copy = A checkbox is a control element that permits the user to make a binary choice, i.e. a choice between one of two possible mutually exclusive options. For example, the user may have to answer 'yes' (checked) or 'no' (not checked).
screen.paper_checkboxes.col01 = Enabled
screen.paper_checkboxes.col02 = Disabled
screen.paper_checkboxes.col03 = Color
screen.paper_checkboxes.checkbox01 = Oxygen
screen.paper_checkboxes.checkbox02 = Carbon
screen.paper_checkboxes.checkbox03 = Hydrogen
screen.paper_checkboxes.checkbox04 = Nitrogen
screen.paper_checkboxes.checkbox05 = Calcium

##############################
### Screen: PAPER_TEXTS
##############################
screen.paper_texts.url = /paper-texts
screen.paper_texts.title = Md Texts
screen.paper_texts.headline = Text Fields
screen.paper_texts.copy = Text fields allow the user to input text. They can be single-line, with or without scrolling, or multi-line, and can have an icon. Touching a text field places the cursor and automatically displays the keyboard.
screen.paper_texts.mobile.note1 = Mobile Users Please Note
screen.paper_texts.mobile.note2 = Unfortunately, it is impossible to invoke a Native Keyboard from Canvas directly. Acanvas will circumvent this by adding and focusing an HTML input field, triggering a Native Keyboard where applicable.
screen.paper_texts.wrap01 = Text Input
screen.paper_texts.wrap02 = Textarea
screen.paper_texts.wrap03 = Validation
screen.paper_texts.input01 = Enter a label
screen.paper_texts.input02 = Password please
screen.paper_texts.input03 = Label (no-float)
screen.paper_texts.input04 = Disabled
screen.paper_texts.input05 = Feel free to enter a lot of text
screen.paper_texts.input06 = Enter a label
screen.paper_texts.input06.required = This input requires a label!


##############################
### Screen: PAPER_RADIO_BUTTONS
##############################
screen.paper_radio_buttons.url = /paper-radio-buttons
screen.paper_radio_buttons.title = Md Radio Buttons
screen.paper_radio_buttons.headline = Radio Buttons
screen.paper_radio_buttons.copy = A radio button or option button is a graphical control element that allows the user to choose only one of a predefined set of options, an exclusive or. Radio buttons are arranged in groups of two or more and displayed on screen as, for example, a list of circular holes that can contain white space (for unselected) or a dot (for selected). Each radio button is normally accompanied by a label describing the choice that the radio button represents. The choices are mutually exclusive; when the user selects a radio button, any previously selected radio button in the same group becomes deselected (making it so only one can be selected).
screen.paper_radio_buttons.col01 = Enabled
screen.paper_radio_buttons.col02 = Disabled (ToDo)
screen.paper_radio_buttons.col03 = Color
screen.paper_radio_buttons.radio01 = Oxygen
screen.paper_radio_buttons.radio02 = Carbon
screen.paper_radio_buttons.radio03 = Hydrogen
screen.paper_radio_buttons.radio04 = Nitrogen
screen.paper_radio_buttons.radio05 = Calcium

##############################
### Screen: PAPER_TOASTS
##############################
screen.paper_toasts.url = /paper-toasts
screen.paper_toasts.title = Md Toasts
screen.paper_toasts.headline = Toasts
screen.paper_toasts.copy = Snackbars provide lightweight feedback about an operation by showing a brief message at the bottom of the screen. Snackbars can contain an action. <br/><br/> Android also provides a toast, primarily used for system messaging. Toasts are similar to snackbars but do not contain actions and cannot be swiped off screen.
screen.paper_toasts.col01 = Timeboxed Toasts
screen.paper_toasts.col02 = Named Toasts
screen.paper_toasts.col03 = Discardable Toasts
screen.paper_toasts.radio01 = Red pill
screen.paper_toasts.radio02 = or
screen.paper_toasts.radio03 = Blue pill
screen.paper_toasts.toast01 = You chose the Red pill.
screen.paper_toasts.toast02 = You chose the Blue pill.
screen.paper_toasts.button01 = Show Toast
screen.paper_toasts.button02 = Hide Toast
screen.paper_toasts.toast03 = Click 'HIDE TOAST' to hide me.


##############################
### Screen: PAPER_ICON_BUTTONS
##############################
screen.paper_icon_buttons.url = /paper-icon-buttons
screen.paper_icon_buttons.title = Md Icon Buttons
screen.paper_icon_buttons.headline = Icon Buttons
screen.paper_icon_buttons.copy = In computing, an icon is a pictogram displayed on a computer screen in order to help the user navigate a computer system or mobile device. The icon itself is a quickly comprehensible symbol of a software tool, function, or a data file, accessible on the system and is more like a traffic sign than a detailed illustration of the actual entity it represents.
screen.paper_icon_buttons.col01 = Enabled
screen.paper_icon_buttons.col02 = Disabled
screen.paper_icon_buttons.col03 = Color

##############################
### Screen: MATERIAL_HOME
##############################
screen.material_home.url = /material-home
screen.material_home.title = Material Design
screen.material_home.headline = Hit the menu to browse
screen.material_home.copy = Examples of Acanvas Commons Material Design components, managed by Acanvas Framework's LifeCycle engine:\n- Buttons\n- Check Boxes\n- Dialogs\n- FABs\n- Icon Buttons\n- Radio Buttons\n- Text\n- Toast Messages\n- Toggles

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##

##############################
### Screen: GAF Goblins
##############################
screen.gaf_bundle_zip.url = /examples/gaf/goblins
screen.gaf_bundle_zip.title = Goblins

screen.gaf_fireman.url = /examples/gaf/fireman
screen.gaf_fireman.title = Fireman
screen.gaf_gun_swap.url = /examples/gaf/gun-swap
screen.gaf_gun_swap.title = Gun Swap
screen.gaf_named_parts.url = /examples/gaf/named-parts
screen.gaf_named_parts.title = Named Parts
screen.gaf_rocket.url = /examples/gaf/rocket
screen.gaf_rocket.title = Rocket
screen.gaf_sequences.url = /examples/gaf/sequences
screen.gaf_sequences.title = Sequences
screen.gaf_skeleton.url = /examples/gaf/skeleton
screen.gaf_skeleton.title = Skeleton
screen.gaf_slot_machine.url = /examples/gaf/slot-machine
screen.gaf_slot_machine.title = Slot Machine
screen.gaf_sound.url = /examples/gaf/sound
screen.gaf_sound.title = Sound

##############################
### Screen: GAF_HOME
##############################
screen.gaf_home.url = /gaf-home
screen.gaf_home.title = GAF Runtime
screen.gaf_home.headline = Hit the menu to browse through examples
screen.gaf_home.copy = Examples of GAF Runtime for StageXL, managed by Acanvas Framework's LifeCycle and UI engines.

screen.gaf_home.companies = A few of the companies who have used GAF technology:
screen.gaf_home.headline1 = GAF = Best solution to improve game dev workflow
screen.gaf_home.copy1 = - GAF greatly reduces the number of steps in game development workflow.\n- With GAF you can play any Flash 2D animation (explosions, cutscenes, characters, etc) on mobile devices.\n- No special pre-preparation needed to convert your Adobe Flash Pro 2D animations into .gaf format.

screen.gaf_home.headline2 = GAF = High Performance
screen.gaf_home.copy2 = GAF delivers the highest performance:
screen.gaf_home.copy21 = - High FPS, which is possible due to runtime libraries provided and supported by GAF Media;\n- Minimal amount of drawcalls achieved by the means of using native API for each framework to control and manage animations;\n- Highly optimized texture atlas to achieve minimal RAM consumption and build size.

screen.gaf_home.headline3 = Full Flash Pro 2D animation support
screen.gaf_home.copy3 = GAF Converter supports the full capability of Adobe Flash Pro and Adobe Animate CC. Support includes:
screen.gaf_home.copy31 = - Vector graphics;\n- Shape, motion, and classic tweens;\n- Filters and Masks;\n- Frame labels;\n- And much more!

screen.gaf_home.headline4 = GAF solves Sprite Sheets limitations
screen.gaf_home.copy4 = With sprite sheets you cannot port the full range of 2D animation possibilities to your mobile game.
screen.gaf_home.copy41 = - GAF ports the full range of 2D animation possibilities to your mobile game;\n- GAF provides fast texture loading into the device memory as against to time consuming loading when using sprite sheets;\n- GAF allows preserving custom animation effects, which are lost when using sprite sheets.


## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##
## ELEMENT INSERTION PLACEHOLDER - DO NOT REMOVE ##


##############################
### Screen: MoppiFlower Example
##############################
screen.stagexl.moppiflower.url = /examples/moppiflower
screen.stagexl.moppiflower.title = MoppiFlower Demo
screen.stagexl.moppiflower.headline = Demo Time!
screen.stagexl.moppiflower.copy = The infamous Flower Demo by Moppi Productions
screen.stagexl.moppiflower.button01 = Unlock Audio

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##
##############################
### Screen: BOX2D_PHYSICS
##############################
screen.physics_example.url = /examples/physics
screen.physics_example.title = Physics Engine
screen.physics_example.headline = Hello World.
screen.physics_example.button01 = Next Example
##############################
### Screen: DragonBones Demon
##############################
screen.stagexl.dragonbones.demon.url = /examples/dragonbones/demon
screen.stagexl.dragonbones.demon.title = Demon
##############################
### Screen: DragonBones Dragon
##############################
screen.stagexl.dragonbones.dragon_new.url = /examples/dragonbones/dragon
screen.stagexl.dragonbones.dragon_new.title = Dragon
##############################
### Screen: DragonBones Swordsman
##############################
screen.stagexl.dragonbones.swords_man.url = /examples/dragonbones/swordsman
screen.stagexl.dragonbones.swords_man.title = Swordsman
##############################
### Screen: DragonBones Ubbie
##############################
screen.stagexl.dragonbones.ubbie.url = /examples/dragonbones/ubbie
screen.stagexl.dragonbones.ubbie.title = Ubbie

##############################
### Screen: DRAGONBONES_HOME
##############################
screen.dragonbones_home.url = /examples/dragonbones
screen.dragonbones_home.title = DragonBones Runtime
screen.dragonbones_home.headline = Hit the menu to browse examples
screen.dragonbones_home.animation.headline = DragonBones Animation Solution
screen.dragonbones_home.animation.copy = Free 2D Skeletal Animation Solution \nConnect Animation Creation and Game Programing Pipelines \nReduce Art Cost and Produce More Vivid Animation
screen.dragonbones_home.animation.sub1.headline = Easily Build Avatar System
screen.dragonbones_home.animation.sub1.copy = Any image belongs to an armature can be changed by one line of code at runtime. Easily build your own avatar system.
screen.dragonbones_home.animation.sub2.headline = Reduce Art Cost
screen.dragonbones_home.animation.sub2.copy = Store only texture atlas and animation data.\nUse several image pieces to compose various animations.\nOnly add several key frames in timeline,\nAdd only key frames in the timeline, smooth animations will be generated.
screen.dragonbones_home.more1.headline1 = Skeletal Operation
screen.dragonbones_home.more1.copy = Bind bone for image. Easily let your character have more vivid actions and more smooth animations.
screen.dragonbones_home.more2.headline = Movie Clip
screen.dragonbones_home.more2.copy = Use movie clip to create animation AD and marking webpage. Support motion tween and frame sequence.
screen.dragonbones_home.more3.headline = Timeline
screen.dragonbones_home.more3.copy = Use timeline to adjust each element's key frame, speed, motion tween, to create animations.
screen.dragonbones_home.more4.headline = Curve Editor
screen.dragonbones_home.more4.copy = Use curve to adjust motion accelerate to make your animtion more vivid.
screen.dragonbones_home.more5.headline = Mesh and FFD
screen.dragonbones_home.more5.copy = Meshes allow you to specify a polygon inside your image. This improves the fill rate. FFD allows meshes to stretch, squash, bend and bounce.
screen.dragonbones_home.more6.headline = IK and Constraint
screen.dragonbones_home.more6.copy = Constraints can be defined to animate using inverse kinematics and the Pose tool uses multi-bone IK to quickly pose a skeleton.
screen.dragonbones_home.more7.headline = Import
screen.dragonbones_home.more7.copy = Import PS images with layers, DragonBones data from DragonBonesPro and FlashPro, other animation data like Spine and Cocos.
screen.dragonbones_home.more8.headline = Nested Animation Symbol
screen.dragonbones_home.more8.copy = Animation symbol can be nested to create more complex animation symbol.
screen.dragonbones_home.more9.headline = Skinning Animation
screen.dragonbones_home.more9.copy = Skinning allow individual vertices in a mesh to be attached to different bones. When the bones move, the vertices move with them and the mesh is deformed automatically.
screen.dragonbones_home.more10.headline = Preview and Publish
screen.dragonbones_home.more10.copy = Preview animation in real environment. What you see is what you get. Publish with H5 and running in device without any coding.
screen.dragonbones_home.more11.headline = Packaging and Export
screen.dragonbones_home.more11.copy = Pack images into a texture atlas, which results in more efficient rendering in your games. Export DragonBones and Egret MovieClip data with JSON data format.
screen.dragonbones_home.more12.headline = Onion Skin
screen.dragonbones_home.more12.copy = 使用洋葱皮功能可以同时看到前后若干帧的影图，方便更加精准的调节动画细节

##############################
### Element: HOME_SECTION1
##############################
element.home_section1.headline = Hello World.
element.home_section1.copy = See config/locale for text associated to autogenerated class HomeSection1

##############################
### Element: HOME_MORE_BOX
##############################
element.home_more_box.headline = Hello World.
element.home_more_box.copy = See config/locale for text associated to autogenerated class HomeMoreBox

## ELEMENT INSERTION PLACEHOLDER - DO NOT REMOVE ##


## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##


##############################
### Screen: Particle Example
##############################
screen.stagexl.particle.url = /examples/particle
screen.stagexl.particle.title = Particle Engine
screen.stagexl.particle.headline = Particle Engine
screen.stagexl.particle.copy = Examples of StageXL's Particle Runtime, managed by Acanvas Framework's LifeCycle and UI engines.

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##
##############################
### Screen: BASIC_BITMAPDATA_HIDPI
##############################
screen.stagexl.bitmapdata.hidpi.url = /examples/basic/bitmapdata-hidpi
screen.stagexl.bitmapdata.hidpi.title = HiDPI BitmapData
screen.stagexl.bitmapdata.hidpi.headline = HiDPI BitmapData Example
screen.stagexl.bitmapdata.hidpi.copy = .

##############################
### Screen: BASIC_SPRITE3D
##############################
screen.stagexl.sprite3d.url = /examples/basic/sprite3d
screen.stagexl.sprite3d.title = Sprite3D
screen.stagexl.sprite3d.headline = Sprite3D Example
screen.stagexl.sprite3d.copy = .

##############################
### Screen: NORMAL_MAP_FILTER
##############################
screen.stagexl.normal_map_filter.url = /examples/basic/normal-map-filter
screen.stagexl.normal_map_filter.title = Normal Map Filter
screen.stagexl.normal_map_filter.headline = Normal Map Filter Example
screen.stagexl.normal_map_filter.copy = .

##############################
### Screen: DRAG
##############################
screen.stagexl.drag.url = /examples/basic/drag
screen.stagexl.drag.title = Drag and Drop
screen.stagexl.drag.headline = Drag and Drop Example
screen.stagexl.drag.copy = .

##############################
### Screen: BEZIER
##############################
screen.stagexl.bezier.url = /examples/basic/bezier
screen.stagexl.bezier.title = Bezier animation
screen.stagexl.bezier.headline = Bezier animation Example
screen.stagexl.bezier.copy = .

##############################
### Screen: LOGO
##############################
screen.stagexl.logo.url = /examples/basic/logo
screen.stagexl.logo.title = Dart Logo
screen.stagexl.logo.headline = Dart Logo animation example
screen.stagexl.logo.copy = .

##############################
### Screen: MEMORY
##############################
screen.stagexl.memory.url = /examples/basic/memory
screen.stagexl.memory.title = Memory
screen.stagexl.memory.headline = Let's play memory!
screen.stagexl.memory.copy = .

##############################
### Screen: STAGE_XLHOME
##############################
screen.stage_xlhome.url = /examples/stagexl-home
screen.stage_xlhome.title = StageXL Examples
screen.stage_xlhome.headline = Hit the menu to browse
screen.stage_xlhome.copy = StageXL Examples:\n- Animated Bezier Curves\n- Automatic HiDPI BitmapData\n- Drag and Drop\n- Lots of Sprites\n- Map Filters\n- Game of Memory\n- Sprite3d Cube

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##


screen.common.loading = Loading ...

##############################
### Screen: HOME
##############################
screen.home.url = /
screen.home.title = Showcase
screen.home.headline = Acanvas Framework
screen.home.copy = Quickly write web apps, minigames, or anything in-between, in pure Dart. No HTML, no CSS, no JS. Acanvas Framework is part of a layered architecture (see diagram at bottom of page) originally conceived for Actionscript, and has been used in dozens of highly interactive microsites and facebook apps for brands such as Mercedes-Benz, Nike, Nikon, serving millions of pageviews.
screen.home.prelude.headline01 = Acanvas Generator
screen.home.prelude.copy01 = Acanvas Generator lets you generate Acanvas projects for Dart 2.0 and StageXL. Options are ranging from a basic Home page, to a full showcase of all available features (you're looking at this, right now).
screen.home.prelude.generator.button.label = Acanvas Generator @ Github
screen.home.prelude.generator.button.url = https://github.com/acanvas/acanvas-generator
screen.home.prelude.headline02 = Why Acanvas?
screen.home.prelude.copy02 = - Focus on highly interactive rich media applications\n- Mature UI lifecycle management\n- Asset load management\n- i18n\n- Plugin system\n- LOTS of examples\n- Generic User Generated Content backend (soon!)

screen.home.headline01 =  Best of breed. Built for speed.
screen.home.copy01 = Acanvas loads extra fast. The minified/gzipped JS comes at a mere 120 KByte, including Material Design UI components. Their underlying UI components were built years ago by some of the best ActionScript programmers in the field, resulting in snappy performance. And acceptable performance even on a seven year old iPhone 4. Acanvas generally animates at 60 fps, but has an idle mode to save on cpu load and battery whenever possible.
screen.home.headline02 = Innovation
screen.home.copy02 = Acanvas takes technology out of the way, so that teams can focus on UX and jaw dropping designs. Each generated project comes with CLI tools to collect assets and create pages and elements. And with full GAF, DragonBones, and Spine integration, you get a scalable designer-developer workflow out of the box!
screen.home.headline03 =  Total Control
screen.home.copy03 = With Acanvas, you define what happens when - control every pixel and every millisecond, and make art direction happy. Because _everything_ is built in Dart, you get full cycle introspection from logic to layout and back again. No media breach. No magic functions. No WTFs. Too much marketing speak? I'm not even done yet:
screen.home.headline04 =  Extreme Flexibility
screen.home.copy04 = Acanvas has been used for microsites, facebook apps, and mobile apps (Adobe AIR). Thanks to Spring's IoC container and smart conventions, you can plug everything together with everything else. No matter what, things won't get messy. You write Acanvas code once, and it runs anywhere.
screen.home.headline05 =  Rapid Scalability
screen.home.copy05 = A Acanvas project team usually only requires a single 'system architect', responsible for its bootstrap and creation of commands and services. All other developers can focus on the frontend and will feel at home, instantly. There have been cases where teams were scaled from one to six frontend developers without framework experience within a single day.
screen.home.headline06 =  Inherent Reusability
screen.home.copy06 = How often did you hear yourself saying: "some time after the project is done, i will clean up and reuse this and that killer feature"? Exactly, too often. Acanvas's architecture enables you to code in a sustainable fashion without losing speed.
screen.home.headline07 =  10x faster time to market than traditional html/js/css
screen.home.copy07 = No kidding. Not only will you have more certainty about what's feasible, but also way, way, way less QA.
screen.home.headline08 =  Layered Architecture


##############################
### Screen: TWO
##############################
screen.two.url = /dog
screen.two.title = Dog Page
screen.two.button = Show a cat!


##############################
### Screen: IMAGE DETAIL
##############################
screen.imagedetail.url = /layer-photo
screen.imagedetail.title = Cats
screen.imagedetail.headline = Here you go.
screen.imagedetail.button.close = Close
screen.imagedetail.button.close.meow = Meow!


## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##


##############################
### Backend Messages
##############################
email.confirm.sendertext = Acanvas Framework Demo <$sender>
email.confirm.sender = nilsdoehring@gmail.com
email.confirm.body = Hi $name,\n\nthanks for your entry! In order to take part in the sweepstake, please confirm your interest by clicking this link: \n$link\n\nHave fun!\n\nYours, Acanvas Framework Demo
email.confirm.link = http://localhost/
email.confirm.subject = Acanvas Demo - Confirmation Mail
##############################
### Screen: Isometric Example
##############################
screen.stagexl.isometric.url = /examples/isometric
screen.stagexl.isometric.title = Isometric Runtime

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##

##############################
### Screen: BASIC
##############################
screen.stagexl.bitmapfont.simple.url = /examples/bitmapfont/hidpi
screen.stagexl.bitmapfont.simple.title = HiDPI

##############################
### Screen: TEXTURE_ATLAS
##############################
screen.stagexl.bitmapfont.texture_atlas.url = /examples/bitmapfont/texture-atlas
screen.stagexl.bitmapfont.texture_atlas.title = Texture Atlas

##############################
### Screen: DISTANCE_FIELD
##############################
screen.stagexl.bitmapfont.distance_field.url = /examples/bitmapfont/distance-field
screen.stagexl.bitmapfont.distance_field.title = Distance Field

##############################
### Screen: BITMAP_FONT_HOME
##############################
screen.bitmap_font_home.url = /bitmap-font-home
screen.bitmap_font_home.title = Bitmap Fonts
screen.bitmap_font_home.headline = Hit the menu to browse
screen.bitmap_font_home.copy = Examples of StageXL's BitmapFont extension, managed by Acanvas Framework:\n- Simple: Provide an .fnt File as source.\n- Distance Field: Infinitely scalable fonts, always crisp.\n- Texture Atlas: Load one ore more Fonts from a Texture Atlas file.
screen.bitmap_font_home.copy1 = Bitmap fonts can be created with different tools, here is just a short list of the most popular tools available:
screen.bitmap_font_home.tool1.name = bmGlyph (Mac)
screen.bitmap_font_home.tool1.url = http://www.bmglyph.com/screenshots
screen.bitmap_font_home.tool2.name = Glyph Designer (Mac and Windows)
screen.bitmap_font_home.tool2.url = https://71squared.com/glyphdesigner
screen.bitmap_font_home.tool3.name = BMFont (Windows)
screen.bitmap_font_home.tool3.url = http://www.angelcode.com/products/bmfont
screen.bitmap_font_home.tool4.name = Littera (Online)
screen.bitmap_font_home.tool4.url = http://kvazars.com/littera

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##

##############################
### Screens
##############################
screen.spine_stretchy_man.url = /examples/spine/stretchy-man
screen.spine_stretchy_man.title = SpineStretchyMan
screen.spine_goblins_ffd.url = /examples/spine/goblins-ffd
screen.spine_goblins_ffd.title = Goblins FFD
screen.spine_hero.url = /examples/spine/hero
screen.spine_hero.title = Hero
screen.spine_powerup.url = /examples/spine/power-up
screen.spine_powerup.title = Power Up
screen.spine_raptor.url = /examples/spine/raptor
screen.spine_raptor.title = Raptor
screen.spine_boy.url = /examples/spine/boy
screen.spine_boy.title = Boy
screen.spine_boy_mesh.url = /examples/spine/boy-mesh
screen.spine_boy_mesh.title = Boy Mesh
screen.spine_tank.url = /examples/spine/tank
screen.spine_tank.title = Tank
screen.spine_texture_atlas.url = /examples/spine/texture-atlas
screen.spine_texture_atlas.title = Texture Atlas
screen.spine_vine.url = /examples/spine/vine
screen.spine_vine.title = Vine




##############################
### Screen: SPINE_HOME
##############################
screen.spine_home.url = /examples/spine-home
screen.spine_home.title = Spine Runtime
screen.spine_home.headline = Hit the menu to browse
screen.spine_home.copy = Examples of Spine Runtime for StageXL, managed by Acanvas Framework's LifeCycle and UI engines.
screen.spine_home.headline1 = Spine: 2D animation for games
screen.spine_home.copy1 = Animation brings video games alive. We believe creating great 2D animation requires not only powerful software, but a powerful workflow. Spine is dedicated to 2D skeletal animation, providing an efficient workflow both for creating amazing animation and for integrating it into your games.
screen.spine_home.headline2 = Features
screen.spine_home.copy2 = Animating is an iterative process. Spine provides numerous tools to shape and refine your 2D animations. Bend and deform images with mesh skinning/weights, adjust timing with the dopesheet, visualize motion with ghosting, pose your characters with inverse kinematics, create pseudo 3D effects, and much more.

## SCREEN INSERTION PLACEHOLDER - DO NOT REMOVE ##

